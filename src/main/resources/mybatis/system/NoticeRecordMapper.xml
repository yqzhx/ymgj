<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uustop.project.system.noticeRecord.mapper.NoticeRecordMapper">

    <resultMap type="NoticeRecord" id="NoticeRecordResult">
        <result property="noticeRecordId"    column="notice_record_id"    />
        <result property="noticeId"    column="notice_id"    />
        <result property="noticeType"    column="notice_type"    />
        <result property="noticeTitle"    column="notice_title"    />
        <result property="noticeContent"    column="notice_content"    />
        <result property="enterpriseType"    column="enterprise_type"    />
        <result property="enterpriseId"    column="enterprise_id"    />
        <result property="sendType"    column="send_type"    />
        <result property="sendTo"    column="send_to"    />
        <result property="readStatus"    column="read_status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="enterpriseName"    column="enterprise_name"    />
        <result property="loginName"    column="login_name"    />
        <result property="userName"    column="user_name"    />
        <result property="phonenumber"    column="phonenumber"    />
    </resultMap>

    <resultMap type="UserOnline" id="UserOnlineResult">
        <id     property="sessionId"         column="sessionId"         />
        <result property="loginName"         column="login_name"        />
        <result property="deptName"          column="dept_name"         />
        <result property="ipaddr"            column="ipaddr"            />
        <result property="loginLocation"     column="login_location"    />
        <result property="browser"           column="browser"           />
        <result property="os"                column="os"                />
        <result property="status"            column="status"            />
        <result property="startTimestamp"    column="start_timestamp"   />
        <result property="lastAccessTime"    column="last_access_time"  />
        <result property="expireTime"        column="expire_time"       />
    </resultMap>

	<sql id="selectNoticeRecordVo">
        select
               snr.notice_record_id, snr.notice_id, snr.notice_type, snr.notice_title, snr.notice_content,
               snr.enterprise_type, snr.enterprise_id, snr.send_type, snr.send_to, snr.read_status, snr.create_by,
               snr.create_time, snr.update_by,snr. update_time, snr.remark, snr.del_flag,e.enterprise_name,
               e.login_name,e.phonenumber,e.user_name
        from
             sys_notice_record snr
        left join enterprise e on (snr.send_to=e.id and snr.enterprise_type=e.type)
    </sql>

    <select id="selectNoticeRecordList" parameterType="NoticeRecord" resultMap="NoticeRecordResult">
        <include refid="selectNoticeRecordVo"/>
        <where>
            <if test="noticeRecordId != null "> and snr.notice_record_id = #{noticeRecordId}</if>
             <if test="noticeId != null "> and snr.notice_id = #{noticeId}</if>
             <if test="noticeType != null  "> and snr.notice_type = #{noticeType}</if>
             <if test="noticeTitle != null  and noticeTitle != '' "> and snr.notice_title = #{noticeTitle}</if>
             <if test="noticeContent != null  and noticeContent != '' "> and snr.notice_content = #{noticeContent}</if>
             <if test="enterpriseType != null"> and snr.enterprise_type = #{enterpriseType}</if>
             <if test="enterpriseId != null "> and snr.enterprise_id = #{enterpriseId}</if>
             <if test="sendType != null "> and snr.send_type = #{sendType}</if>
             <if test="sendTo != null "> and snr.send_to = #{sendTo}</if>
             <if test="readStatus != null "> and snr.read_status = #{readStatus}</if>
             <if test="createBy != null  and createBy != '' "> and snr.create_by = #{createBy}</if>
             <if test="createTime != null "> and snr.create_time = #{createTime}</if>
             <if test="updateBy != null  and updateBy != '' "> and snr.update_by = #{updateBy}</if>
             <if test="updateTime != null "> and snr.update_time = #{updateTime}</if>
             <if test="remark != null  and remark != '' "> and snr.remark = #{remark}</if>
             <if test="delFlag != null  and delFlag != '' "> and snr.del_flag = #{delFlag}</if>
             and snr.del_flag = 0 order by snr.enterprise_type desc,snr.enterprise_id desc
        </where>
    </select>

    <select id="selectNoticeRecordById" parameterType="Integer" resultMap="NoticeRecordResult">
        <include refid="selectNoticeRecordVo"/>
        where notice_record_id = #{noticeRecordId}
    </select>

    <insert id="insertNoticeRecord" parameterType="NoticeRecord" keyProperty="noticeRecordId" useGeneratedKeys="true">
        insert into sys_notice_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="noticeRecordId != null  ">notice_record_id,</if>
			<if test="noticeId != null  ">notice_id,</if>
			<if test="noticeType != null ">notice_type,</if>
			<if test="noticeTitle != null  and noticeTitle != ''  ">notice_title,</if>
			<if test="noticeContent != null  and noticeContent != ''  ">notice_content,</if>
			<if test="enterpriseType != null">enterprise_type,</if>
			<if test="enterpriseId != null  ">enterprise_id,</if>
			<if test="sendType != null ">send_type,</if>
			<if test="sendTo != null  ">send_to,</if>
			<if test="readStatus != null">read_status,</if>
			<if test="createBy != null  and createBy != ''  ">create_by,</if>
			<if test="createTime != null  ">create_time,</if>
			<if test="updateBy != null  and updateBy != ''  ">update_by,</if>
			<if test="updateTime != null  ">update_time,</if>
			<if test="remark != null  and remark != ''  ">remark,</if>
			<if test="delFlag != null  and delFlag != ''  ">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="noticeRecordId != null  ">#{noticeRecordId},</if>
			<if test="noticeId != null  ">#{noticeId},</if>
			<if test="noticeType != null ">#{noticeType},</if>
			<if test="noticeTitle != null  and noticeTitle != ''  ">#{noticeTitle},</if>
			<if test="noticeContent != null  and noticeContent != ''  ">#{noticeContent},</if>
			<if test="enterpriseType != null">#{enterpriseType},</if>
			<if test="enterpriseId != null  ">#{enterpriseId},</if>
			<if test="sendType != null ">#{sendType},</if>
			<if test="sendTo != null  ">#{sendTo},</if>
			<if test="readStatus != null ">#{readStatus},</if>
			<if test="createBy != null  and createBy != ''  ">#{createBy},</if>
			<if test="createTime != null  ">#{createTime},</if>
			<if test="updateBy != null  and updateBy != ''  ">#{updateBy},</if>
			<if test="updateTime != null  ">#{updateTime},</if>
			<if test="remark != null  and remark != ''  ">#{remark},</if>
			<if test="delFlag != null  and delFlag != ''  ">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateNoticeRecord" parameterType="NoticeRecord">
        update sys_notice_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="noticeId != null  ">notice_id = #{noticeId},</if>
            <if test="noticeType != null ">notice_type = #{noticeType},</if>
            <if test="noticeTitle != null  and noticeTitle != ''  ">notice_title = #{noticeTitle},</if>
            <if test="noticeContent != null  and noticeContent != ''  ">notice_content = #{noticeContent},</if>
            <if test="enterpriseType != null  ">enterprise_type = #{enterpriseType},</if>
            <if test="enterpriseId != null  ">enterprise_id = #{enterpriseId},</if>
            <if test="sendType != null">send_type = #{sendType},</if>
            <if test="sendTo != null  ">send_to = #{sendTo},</if>
            <if test="readStatus != null">read_status = #{readStatus},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="createTime != null  ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''  ">remark = #{remark},</if>
            <if test="delFlag != null  and delFlag != ''  ">del_flag = #{delFlag},</if>
        </trim>
        where notice_record_id = #{noticeRecordId}
    </update>

	<delete id="deleteNoticeRecordById" parameterType="Integer">
        delete from sys_notice_record where notice_record_id = #{noticeRecordId}
    </delete>

    <delete id="deleteNoticeRecordByIds" parameterType="String">
        delete from sys_notice_record where notice_record_id in
        <foreach item="noticeRecordId" collection="array" open="(" separator="," close=")">
            #{noticeRecordId}
        </foreach>
    </delete>

    <insert id="batchInsertNoticeRecord">
        insert into sys_notice_record
        (notice_id, notice_type, notice_title, notice_content,
         enterprise_type, enterprise_id, send_type, send_to,
         create_by,create_time, update_by, update_time) values
        <foreach collection="list" item="item" separator=",">
       (#{item.noticeId},#{item.noticeType},#{item.noticeTitle},#{item.noticeContent},
        #{item.enterpriseType},#{item.enterpriseId},#{item.sendType},#{item.sendTo},
        #{item.createBy},#{item.createTime},#{item.updateBy}, #{item.updateTime})
        </foreach>
    </insert>

    <select id="selectOnlinePerson" parameterType="UserOnline" resultMap="UserOnlineResult">
        select *
        from (
              select *
              from (select *, 1 as type from prom_user_online where status = 'on_line' order by last_access_time) puo group by login_name desc union all
              select *
              from (select *, 2 as type from cdc_user_online where status = 'on_line' order by last_access_time)  cuo group by login_name desc union all
              select *
              from (select *, 3 as type from mfrs_user_online where status = 'on_line' order by last_access_time) muo group by login_name desc
             ) com
        where com.type =#{type}
    </select>

</mapper>
